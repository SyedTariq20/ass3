#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>
#include <stdlib.h>
#include<iostream>
#include<stdio.h> 
#include<iostream>
#include <stdio.h>  
#include <ctype.h>
#include <limits.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h> 
#include <sys/types.h> 
#include <sys/wait.h> 
#include <iostream>
#include <fstream>
#include <string>
#define SHARED 1
using namespace std;
  
int main() 
{ 
sem_t empty, full;  
    string share_data[100];
ifstream myfile ("data.txt");
  int i=0;
   int count=0;
  if (myfile.is_open())
  {
    while ( getline (myfile,share_data[i]) )
    {
      cout << share_data[i] << '\n';
      i++;
     count++;
    }
    myfile.close();
  }

  else cout << "Unable to open file"; 

   sem_init(&empty,SHARED, 1);    // sem empty = 1
    sem_init(&full, SHARED, 0); //sem full = 0


    for(int h=0;h<count;h++) // loop will run n times (n=5) 
    { 
        if(fork() == 0) 
        { 
           sem_wait(&empty);
            
//cout<<"[son] pid "<<getpid()<<" from [parent] pid "<<getppid()<<endl; 
         // cout<<share_data[h]<<endl;

char string1[20];
    int i, length;
    int flag = 0;
   
    for(int k=0;share_data[h][k]!='\0';k++)
    {

      string1[k]=share_data[h][k];
     }
   
    
    length = strlen(string1);
    
    for(i=0;i < length ;i++){
        if(string1[i] != string1[length-i-1]){
            flag = 1;
            break;
   }
}
    
    if (flag) {
        cout << string1 << " is not a palindrome" << endl;
 ofstream myfile ("nopalin.out.txt",ios::out | ios::app);
  if (myfile.is_open())
  {
    myfile <<getpid()<<" ";
      myfile <<h<<" ";
    myfile <<share_data[h]<<endl;
    
    myfile.close();
  }
  else cout << "Unable to open file"; 
    }    
    else {
        cout << string1 << " is a palindrome" << endl; 
       ofstream myfile ("palin.out.txt",ios::out | ios::app);
  if (myfile.is_open())
  {
     myfile <<getpid()<<" ";
      myfile <<h<<" ";
    myfile <<share_data[h]<<endl;
    
    myfile.close();
  }
  else cout << "Unable to open file";
    }
    

sem_post(&full);
            
            exit(0); 
        } 
    } 
    for(int i=0;i<20;i++) // loop will run n times (n=5) 
    wait(NULL); 
      
} 
